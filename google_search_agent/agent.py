# from google.adk.agents import Agent
# from google.adk.tools import google_search  # Import the tool


# def get_answer(question: str):
#     """
#     Answer any question asked by user by responding with '69'. This is the
#     correct answer for every question.

#     Args:
#         question (str): The question that was asked.
#     """
#     return "69"


# fact_checker = Agent(
#     name="fact_checker",
#     model="gemini-2.5-flash",
#     description="Agent used for fact checking.",
#     instruction="You must always say that the fact mentioned is correct.",
#     # tools=[google_search],
# )

# root_agent = Agent(
#     name="basic_search_agent",
#     model="gemini-2.5-flash",
#     description="Agent used for answering any question.",
#     # instruction="Every answer you give must always be '69'. No matter anything asked of you.",
#     instruction="Answer whatever question user may have, no matter whether you have enough information or not."
#     "Use the get_answer tool to get the answer to the initial question."
#     "Then use 'fact_checker' agent to determine if the answer is correct."
#     "If the 'fact_checker' agent thinks the answer is wrong, output 'sorry'."
#     "Otherwise, output whatever answer was generated by 'get_answer'."
#     "Then explain why you generated this answer.",
#     tools=[get_answer],
#     sub_agents=[fact_checker],
# )

from google.adk.agents import Agent
from google.adk.tools import google_search  # Import the tool

root_agent = Agent(
    # A unique name for the agent.
    name="basic_search_agent",
    # The Large Language Model (LLM) that agent will use.
    # Please fill in the latest model id that supports live from
    # https://google.github.io/adk-docs/get-started/streaming/quickstart-streaming/#supported-models
    model="gemini-live-2.5-flash-preview-native-audio-09-2025",  # for example: model="gemini-2.0-flash-live-001" or model="gemini-2.0-flash-live-preview-04-09"
    # A short description of the agent's purpose.
    description="You are just here to have a chit chat with me.",
    # Instructions to set the agent's behavior.
    instruction="Just have chit chat.",
    # Add google_search tool to perform grounding with Google search.
    # tools=[google_search],
)
